// <auto-generated />
using System;
using LivestockTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivestockTracker.Database.Migrations
{
    [DbContext(typeof(SqliteLivestockContext))]
    [Migration("20220911085923_KraalStats")]
    partial class KraalStats
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("LivestockTracker.Animals.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ArrivalWeight")
                        .HasColumnType("TEXT");

                    b.Property<int>("BatchNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BirthDate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DateOfDeath")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deceased")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PurchaseDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SellDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SellPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subspecies")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Animals.KraalStats", b =>
                {
                    b.Property<int>("AnimalCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageAnimalCost")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageSellPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AverageWeight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DeathRate")
                        .HasColumnType("TEXT");

                    b.ToTable("KraalStats");
                });

            modelBuilder.Entity("LivestockTracker.Feed.FeedingTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimalID");

                    b.Property<int>("FeedTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FeedTypeID");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UnitID");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FeedTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("FeedingTransactions", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Feed.FeedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedTypes", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Medicine.MedicalTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimalID");

                    b.Property<decimal>("Dose")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedicineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MedicineID");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UnitID");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UnitId");

                    b.ToTable("MedicalTransactions", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Medicine.MedicineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MedicineTypes", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Units.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Units", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Weight.WeightTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimalID");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("WeightTransactions", (string)null);
                });

            modelBuilder.Entity("LivestockTracker.Feed.FeedingTransaction", b =>
                {
                    b.HasOne("LivestockTracker.Animals.Animal", "Animal")
                        .WithMany("FeedingTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Feed.FeedType", "Feed")
                        .WithMany("FeedingTransactions")
                        .HasForeignKey("FeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Units.Unit", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Feed");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("LivestockTracker.Medicine.MedicalTransaction", b =>
                {
                    b.HasOne("LivestockTracker.Animals.Animal", "Animal")
                        .WithMany("MedicalTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Medicine.MedicineType", "Medicine")
                        .WithMany("MedicalTransactions")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Units.Unit", "UnitOfMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Medicine");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("LivestockTracker.Weight.WeightTransaction", b =>
                {
                    b.HasOne("LivestockTracker.Animals.Animal", "Animal")
                        .WithMany("WeightTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("LivestockTracker.Animals.Animal", b =>
                {
                    b.Navigation("FeedingTransactions");

                    b.Navigation("MedicalTransactions");

                    b.Navigation("WeightTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Feed.FeedType", b =>
                {
                    b.Navigation("FeedingTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Medicine.MedicineType", b =>
                {
                    b.Navigation("MedicalTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
