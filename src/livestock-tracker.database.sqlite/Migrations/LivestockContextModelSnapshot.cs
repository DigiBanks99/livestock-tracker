// <auto-generated />
using System;
using LivestockTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LivestockTracker.Database.Migrations
{
    [DbContext(typeof(LivestockContext))]
    partial class LivestockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("LivestockTracker.Database.Models.Animals.AnimalModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ArrivalWeight")
                        .HasColumnType("TEXT");

                    b.Property<int>("BatchNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BirthDate")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DateOfDeath")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deceased")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PurchaseDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SellDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SellPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subspecies")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Animals", "animal");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Feed.FeedTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeedTypes", "feed");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Feed.FeedingTransactionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimalID");

                    b.Property<int>("FeedTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FeedTypeID");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UnitID");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FeedTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("FeedingTransactions", "feed");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Medical.MedicalTransactionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimalID");

                    b.Property<decimal>("Dose")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedicineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MedicineID");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UnitID");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UnitId");

                    b.ToTable("MedicalTransactions", "medical");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Medical.MedicineTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MedicineTypes", "medical");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Units.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Units", "dbo");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Weight.WeightTransactionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TransactionDate")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("WeightTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Feed.FeedingTransactionModel", b =>
                {
                    b.HasOne("LivestockTracker.Database.Models.Animals.AnimalModel", "Animal")
                        .WithMany("FeedingTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Database.Models.Feed.FeedTypeModel", "FeedType")
                        .WithMany("FeedingTransactions")
                        .HasForeignKey("FeedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Database.Models.Units.UnitModel", "UnitOfMeasurement")
                        .WithMany("FeedingTransactions")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("FeedType");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Medical.MedicalTransactionModel", b =>
                {
                    b.HasOne("LivestockTracker.Database.Models.Animals.AnimalModel", "Animal")
                        .WithMany("MedicalTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Database.Models.Medical.MedicineTypeModel", "Medicine")
                        .WithMany("MedicalTransactions")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivestockTracker.Database.Models.Units.UnitModel", "UnitOfMeasurement")
                        .WithMany("MedicalTransactions")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Medicine");

                    b.Navigation("UnitOfMeasurement");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Weight.WeightTransactionModel", b =>
                {
                    b.HasOne("LivestockTracker.Database.Models.Animals.AnimalModel", "Animal")
                        .WithMany("WeightTransactions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Animals.AnimalModel", b =>
                {
                    b.Navigation("FeedingTransactions");

                    b.Navigation("MedicalTransactions");

                    b.Navigation("WeightTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Feed.FeedTypeModel", b =>
                {
                    b.Navigation("FeedingTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Medical.MedicineTypeModel", b =>
                {
                    b.Navigation("MedicalTransactions");
                });

            modelBuilder.Entity("LivestockTracker.Database.Models.Units.UnitModel", b =>
                {
                    b.Navigation("FeedingTransactions");

                    b.Navigation("MedicalTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
